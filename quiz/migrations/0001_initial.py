# Generated by Django 5.0.6 on 2025-10-21 17:23

import cloudinary.models
import django.core.validators
import tinymce.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('learning_objectives', models.TextField(blank=True, default='Input your learning objectives', null=True)),
                ('ai_question_num', models.PositiveIntegerField(blank=True, default=500, null=True, verbose_name='Number of AI Questions')),
                ('room_name', models.CharField(blank=True, max_length=100, null=True)),
                ('question_number', models.PositiveIntegerField(blank=True, null=True)),
                ('course_pay', models.BooleanField(default=False)),
                ('full_screen', models.BooleanField(default=False)),
                ('total_marks', models.PositiveIntegerField(blank=True, null=True)),
                ('num_attemps', models.PositiveIntegerField(default=4)),
                ('show_questions', models.PositiveIntegerField(default=10)),
                ('duration_minutes', models.PositiveIntegerField(default=10)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Exam',
                'verbose_name_plural': 'Exams',
                'ordering': ['course_name__title'],
            },
        ),
        migrations.CreateModel(
            name='CourseGrade',
            fields=[
                ('name', models.CharField(blank=True, db_index=True, max_length=140, null=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Student class',
                'verbose_name_plural': 'student classes',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('marks', models.PositiveIntegerField(default=1, help_text='This field is locked to 1 mark.', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1)])),
                ('question', tinymce.models.HTMLField(blank=True, null=True)),
                ('img_quiz', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='image')),
                ('option1', tinymce.models.HTMLField(blank=True, max_length=500, null=True)),
                ('option2', tinymce.models.HTMLField(blank=True, max_length=500, null=True)),
                ('option3', tinymce.models.HTMLField(blank=True, max_length=500, null=True)),
                ('option4', tinymce.models.HTMLField(blank=True, max_length=500, null=True)),
                ('answer', models.CharField(blank=True, choices=[('Option1', 'Option1'), ('Option2', 'Option2'), ('Option3', 'Option3'), ('Option4', 'Option4')], max_length=200, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.PositiveIntegerField()),
                ('date', models.DateTimeField(auto_now=True)),
                ('result_class', models.CharField(blank=True, db_index=True, max_length=300, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('is_locked', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['student__first_name', 'student__last_name', 'exam__course_name'],
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('school_name', models.CharField(db_index=True, max_length=255)),
                ('course_pay', models.BooleanField(db_index=True, default=False)),
                ('customer', models.BooleanField(db_index=True, default=True)),
                ('school_motto', models.CharField(blank=True, max_length=255, null=True)),
                ('school_address', models.CharField(blank=True, max_length=355, null=True)),
                ('portfolio', models.CharField(blank=True, max_length=255, null=True)),
                ('logo', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='school_logos')),
                ('principal_signature', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='principal_signatures')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('A_min', models.IntegerField(default=81)),
                ('A_max', models.IntegerField(default=100)),
                ('B_min', models.IntegerField(default=66)),
                ('B_max', models.IntegerField(default=80)),
                ('C_min', models.IntegerField(default=56)),
                ('C_max', models.IntegerField(default=65)),
                ('P_min', models.IntegerField(default=46)),
                ('P_max', models.IntegerField(default=55)),
                ('F_min', models.IntegerField(default=0)),
                ('F_max', models.IntegerField(default=45)),
                ('A_comment', models.CharField(blank=True, default='Excellent performance', max_length=255, null=True)),
                ('B_comment', models.CharField(blank=True, default='Good', max_length=255, null=True)),
                ('C_comment', models.CharField(blank=True, default='Gredit', max_length=255, null=True)),
                ('P_comment', models.CharField(blank=True, default='Pass', max_length=255, null=True)),
                ('F_comment', models.CharField(blank=True, default='Fail', max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected_answer', models.CharField(max_length=200)),
                ('is_correct', models.BooleanField()),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentExamSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_order', models.JSONField()),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
    ]
